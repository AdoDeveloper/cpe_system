<!-- views/pages/tickets/timeline.hbs -->
<div class="container p-4">
  <h1 class="text-center">Detalles del Ticket - {{ticket.numeroTicket}}</h1>

  <!-- Condicional para tipo de ticket -->
  {{#if (eq ticket.tipoTicket.nombre 'resolucion')}}
    <!-- Diseño de dos columnas para resolución -->
    <div class="row mt-4">
      <!-- Columna de información del ticket -->
      <div class="col-md-4">
        <div class="card mb-4">
          <div class="card-body">
            <h4>{{ticket.titulo}}</h4>
            <p><strong>Descripción:</strong> {{ticket.descripcion}}</p>
            <p><strong>Estado:</strong>
              <span id="estadoBadge" class="badge badge-{{#if (eq ticket.estado 'completado')}}success{{else if (eq ticket.estado 'detenido')}}danger{{else}}info{{/if}}">
                {{ticket.estado}}
              </span>
            </p>
            <p><strong>Cliente:</strong> {{ticket.cliente.nombres}} {{ticket.cliente.apellidos}}</p>
            {{#if ticket.img_problema}}
              <p><strong>Imagen del Problema:</strong></p>
              <img src="{{ticket.img_problema}}" alt="Imagen de problema" class="img-thumbnail w-100">
            {{/if}}
          </div>
        </div>

        <!-- Permitir a técnicos e instaladores actualizar el estado del ticket -->
        {{#if (and (not (eq user.rol 'Cliente')) (or (eq user.rol 'Tecnico') (eq user.rol 'Instalador') (eq user.rol 'Soporte Tecnico') (eq user.rol 'Administrador') ))}}
          <div class="card">
            <div class="card-body">
              <h4>Actualizar Estado del Ticket</h4>
              <form action="/tickets/{{ticket.id}}/updatestatus?_method=PUT" method="POST" id="alertFormEdit">
                <div class="form-group">
                  <label for="estado">Estado</label>
                  <select id="estado" name="estado" class="form-control" required>
                    <option value="enviado" {{#if (eq ticket.estado 'enviado')}}selected{{/if}}>Enviado</option>
                    <option value="en_revision" {{#if (eq ticket.estado 'en_revision')}}selected{{/if}}>En revisión</option>
                    <option value="detenido" {{#if (eq ticket.estado 'detenido')}}selected{{/if}}>Detenido</option>
                    <option value="completado" {{#if (eq ticket.estado 'completado')}}selected{{/if}}>Completado</option>
                  </select>
                </div>
                <button type="submit" class="btn btn-primary mb-2">Actualizar Estado</button>
              </form>
            </div>
          </div>
        {{/if}}
      </div>

      <!-- Columna de chat -->
      <div class="col-md-8">
        <!-- Contenedor del chat -->
        <div class="card">
          <div class="card-header">
            <h4>Chat de Soporte</h4>
          </div>
          <div class="card-body" id="chatContainer" style="height: 500px; overflow-y: auto;">
            {{#each mensajes}}
              {{!-- Determinar si el mensaje es enviado o recibido --}}
              {{#if (eq this.usuario.id ../user.id)}}
                <!-- Mensaje enviado -->
                <div class="d-flex justify-content-end mb-2">
                  <div class="p-2 rounded chat-bubble sent">
                    {{#if this.mediaUrl}}
                      <img src="{{this.mediaUrl}}" alt="Imagen adjunta" class="img-thumbnail mb-2" style="max-width: 200px;">
                    {{/if}}
                    <p class="mb-1">{{this.mensaje}}</p>
                    <small class="d-block text-right">{{formatDate this.createdAt}}</small>
                  </div>
                </div>
              {{else}}
                <!-- Mensaje recibido -->
                <div class="d-flex justify-content-start mb-2">
                  <div class="p-2 rounded chat-bubble received">
                    {{#if this.mediaUrl}}
                      <img src="{{this.mediaUrl}}" alt="Imagen adjunta" class="img-thumbnail mb-2" style="max-width: 200px;">
                    {{/if}}
                    <p class="mb-1"><strong>{{this.usuario.nombre}}:</strong> {{this.mensaje}}</p>
                    <small class="d-block text-left">{{formatDate this.createdAt}}</small>
                  </div>
                </div>
              {{/if}}
            {{/each}}
          </div>
          <!-- Formulario para enviar mensaje -->
          {{#if (eq ticket.estado 'en_revision')}}
            <div class="card-footer">
              <form id="messageForm">
                <div class="input-group">
                  <textarea id="mensaje" name="mensaje" class="form-control" rows="1" placeholder="Escribe un mensaje..." required></textarea>
                  <div class="input-group-append">
                    <label class="btn btn-secondary mb-0">
                      <i class="fas fa-paperclip"></i>
                      <input type="file" name="media" id="media" accept="image/*" style="display: none;">
                    </label>
                    <button type="submit" class="btn btn-primary"><i class="fas fa-paper-plane"></i></button>
                  </div>
                </div>
                <img id="previewImage" src="#" alt="Vista previa" class="img-thumbnail mt-2" style="display: none; max-width: 200px;">
              </form>
            </div>
          {{else}}
            <!-- Mostrar mensaje según el estado del ticket -->
            <div class="card-footer">
              {{#if (eq ticket.estado 'completado')}}
                <div class="alert alert-success mb-0">
                  <strong>Ticket Completado:</strong> No es posible enviar más mensajes en este ticket.
                </div>
              {{else if (eq ticket.estado 'detenido')}}
                <div class="alert alert-warning mb-0">
                  <strong>Ticket Detenido:</strong> Mensajería deshabilitada temporalmente.
                </div>
              {{else if (eq ticket.estado 'enviado')}}
                <div class="alert alert-info mb-0">
                  <strong>Ticket Enviado:</strong> Esperando revisión. La mensajería no está disponible.
                </div>
              {{/if}}
            </div>
          {{/if}}
        </div>
      </div>
    </div>
  {{else}}
    <!-- Vista para instalación o mantenimiento -->
    <div class="card mt-4">
      <div class="card-body">
        <h4>{{ticket.titulo}}</h4>
        <p><strong>Descripción:</strong> {{ticket.descripcion}}</p>
        <p><strong>Estado:</strong>
          <span id="estadoBadge" class="badge badge-{{#if (eq ticket.estado 'completado')}}success{{else if (eq ticket.estado 'detenido')}}danger{{else}}info{{/if}}">
            {{ticket.estado}}
          </span>
        </p>
        <p><strong>Cliente:</strong> {{ticket.cliente.nombres}} {{ticket.cliente.apellidos}}</p>
        {{#if ticket.img_problema}}
          <p><strong>Archivo adjunto:</strong></p>
          {{#if (includes ticket.img_problema ".pdf")}}
              <a href="{{ticket.img_problema}}" class="btn btn-info" target="_blank">Ver o Descargar PDF</a>
          {{else}}
              <img src="{{ticket.img_problema}}" alt="Imagen de problema" class="img-thumbnail w-100">
          {{/if}}
        {{/if}}
      </div>
    </div>

    <!-- Información adicional para mantenimiento o instalación -->
    <div class="mt-4">
      <h4>Información del Cliente</h4>
      <p><strong>Dirección:</strong> {{ticket.direccion}}</p>
      <!-- Mapa de ubicación -->
      <div id="map" style="height: 400px;"></div>
      <a href="https://www.google.com/maps/dir/?api=1&destination={{ticket.latitud}},{{ticket.longitud}}" target="_blank" class="btn btn-success mt-3">
        Iniciar Ruta en Google Maps
      </a>
    </div>

    <!-- Permitir actualización del estado para técnicos e instaladores -->
    {{#if (and (not (eq user.rol 'Cliente')) (or (eq user.rol 'Tecnico') (eq user.rol 'Instalador') (eq user.rol 'Soporte Tecnico') (eq user.rol 'Administrador') ))}}
      <div class="mt-4">
        <h4>Actualizar Estado del Ticket</h4>
        <form action="/tickets/{{ticket.id}}/updatestatus?_method=PUT" method="POST" id="alertFormEdit">
          <div class="form-group">
            <label for="estado">Estado</label>
            <select id="estado" name="estado" class="form-control" required>
              <option value="enviado" {{#if (eq ticket.estado 'enviado')}}selected{{/if}}>Enviado</option>
              <option value="en_revision" {{#if (eq ticket.estado 'en_revision')}}selected{{/if}}>En revisión</option>
              <option value="detenido" {{#if (eq ticket.estado 'detenido')}}selected{{/if}}>Detenido</option>
              <option value="completado" {{#if (eq ticket.estado 'completado')}}selected{{/if}}>Completado</option>
            </select>
          </div>
          <button type="submit" class="btn btn-primary mb-2">Actualizar Estado</button>
        </form>
      </div>
    {{/if}}
  {{/if}}
</div>

<!-- Incluir scripts necesarios -->
<script src="/socket.io/socket.io.js"></script>
<script src="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.js"></script>
<link href="https://api.mapbox.com/mapbox-gl-js/v2.15.0/mapbox-gl.css" rel="stylesheet" />

<!-- Estilos adicionales -->
<style>
  .chat-bubble {
    position: relative;
    padding: 10px;
    border-radius: 15px;
    max-width: 70%;
    word-wrap: break-word;
  }

  .chat-bubble.sent {
    background-color: #007bff;
    color: #fff;
  }

  .chat-bubble.received {
    background-color: #f1f0f0;
    color: #000;
  }

  .chat-bubble img {
    border-radius: 10px;
    margin-top: 5px;
    max-width: 100%;
  }

  /* Responsive adjustments */
  @media (max-width: 767.98px) {
    .chat-bubble {
      max-width: 100%;
    }
  }
</style>

<script>
  // Mostrar el mapa si es mantenimiento o instalación
  {{#unless (eq ticket.tipoTicket.nombre 'resolucion')}}
    mapboxgl.accessToken = 'pk.eyJ1IjoiYWxleDk3IiwiYSI6ImNqdWZyNm1oazBoYzIzeXBrNDM2NnlyZHEifQ.Wfjlumf_PJzaNUhB9yy29w';
    const lat = parseFloat('{{ticket.latitud}}');
    const lng = parseFloat('{{ticket.longitud}}');

    const map = new mapboxgl.Map({
      container: 'map',
      style: 'mapbox://styles/mapbox/streets-v11',
      center: [lng, lat],
      zoom: 14
    });

    new mapboxgl.Marker()
      .setLngLat([lng, lat])
      .addTo(map);
  {{/unless}}

  // Configuración de Socket.IO
  const socket = io();

  // Unirse a la sala específica del ticket
  socket.emit('joinTicket', { ticketId: {{ticket.id}} });

  // Función para actualizar la interfaz de acuerdo al estado
  function updateMessageFormAndStatus(newState) {
    const estadoBadge = document.getElementById('estadoBadge');

    // Actualizar el estado visualmente
    if (estadoBadge) {
      estadoBadge.textContent = newState;
      estadoBadge.className = `badge badge-${newState === 'completado' ? 'success' : newState === 'detenido' ? 'danger' : 'info'}`;
    }

    const chatFooter = document.querySelector('.col-md-8 .card .card-footer');
    if (chatFooter) chatFooter.remove();

    const chatCard = document.querySelector('.col-md-8 .card');

    if (newState === 'en_revision') {
      // Crear el formulario nuevamente
      const footer = document.createElement('div');
      footer.classList.add('card-footer');
      footer.innerHTML = `
        <form id="messageForm">
          <div class="input-group">
            <textarea id="mensaje" name="mensaje" class="form-control" rows="1" placeholder="Escribe un mensaje..." required></textarea>
            <div class="input-group-append">
              <label class="btn btn-secondary mb-0">
                <i class="fas fa-paperclip"></i>
                <input type="file" name="media" id="media" accept="image/*" style="display: none;">
              </label>
              <button type="submit" class="btn btn-primary"><i class="fas fa-paper-plane"></i></button>
            </div>
          </div>
          <img id="previewImage" src="#" alt="Vista previa" class="img-thumbnail mt-2" style="display: none; max-width: 200px;">
        </form>
      `;
      chatCard.appendChild(footer);

      // Asociar eventos al nuevo formulario
      setupMessageForm();
    } else {
      // Mostrar el mensaje correspondiente
      const footer = document.createElement('div');
      footer.classList.add('card-footer');
      let alertClass = '';
      let alertMessage = '';

      if (newState === 'completado') {
        alertClass = 'alert-success';
        alertMessage = '<strong>Ticket Completado:</strong> No es posible enviar más mensajes en este ticket.';
      } else if (newState === 'detenido') {
        alertClass = 'alert-warning';
        alertMessage = '<strong>Ticket Detenido:</strong> Mensajería deshabilitada temporalmente.';
      } else if (newState === 'enviado') {
        alertClass = 'alert-info';
        alertMessage = '<strong>Ticket Enviado:</strong> Esperando revisión. La mensajería no está disponible.';
      }

      footer.innerHTML = `<div class="alert ${alertClass} mb-0">${alertMessage}</div>`;
      chatCard.appendChild(footer);
    }
  }

  // Escuchar eventos de socket para los diferentes estados del ticket
  socket.on('ticketStatusChanged', function(data) {
    const { newState } = data;
    updateMessageFormAndStatus(newState);
  });

  // Función para configurar el formulario de mensajes
  function setupMessageForm() {
    const messageForm = document.getElementById('messageForm');
    const mediaInput = document.getElementById('media');
    const previewImage = document.getElementById('previewImage');

    if (messageForm) {
      messageForm.addEventListener('submit', function(event) {
        event.preventDefault();
        const mensaje = document.getElementById('mensaje').value;
        const userId = {{user.id}};
        const ticketId = {{ticket.id}};

        if (mediaInput.files.length > 0) {
          const file = mediaInput.files[0];
          if (!file.type.match('image.*')) {
            alert('Solo se permiten imágenes.');
            return;
          }
          const reader = new FileReader();
          reader.onload = function(e) {
            const imageData = e.target.result.split(',')[1];
            socket.emit('sendMessage', { ticketId, userId, mensaje, imageData });
          };
          reader.readAsDataURL(file);
        } else {
          socket.emit('sendMessage', { ticketId, userId, mensaje });
        }
        messageForm.reset();
        previewImage.style.display = 'none';
      });
    }

    // Mostrar vista previa de la imagen seleccionada
    if (mediaInput) {
      mediaInput.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file && file.type.match('image.*')) {
          const reader = new FileReader();
          reader.onload = function(e) {
            previewImage.src = e.target.result;
            previewImage.style.display = 'block';
          };
          reader.readAsDataURL(file);
        } else {
          previewImage.src = '#';
          previewImage.style.display = 'none';
        }
      });
    }
  }

  // Inicializar el formulario al cargar la página
  setupMessageForm();

  // Escuchar nuevos mensajes
  socket.on('newMessage', function(data) {
    const mensajesContainer = document.getElementById('chatContainer');
    const mensaje = data.mensaje;

    // Crear elementos del mensaje
    const messageDiv = document.createElement('div');

    // Determinar si el mensaje es enviado o recibido
    if (mensaje.usuario.id === {{user.id}}) {
      // Mensaje enviado
      messageDiv.classList.add('d-flex', 'justify-content-end', 'mb-2');
      messageDiv.innerHTML = `
        <div class="p-2 rounded chat-bubble sent">
          ${mensaje.mediaUrl ? `<img src="${mensaje.mediaUrl}" alt="Imagen adjunta" class="img-thumbnail mb-2" style="max-width: 200px;">` : ''}
          <p class="mb-1">${mensaje.mensaje}</p>
          <small class="d-block text-right">${new Date(mensaje.createdAt).toLocaleString()}</small>
        </div>
      `;
    } else {
      // Mensaje recibido
      messageDiv.classList.add('d-flex', 'justify-content-start', 'mb-2');
      messageDiv.innerHTML = `
        <div class="p-2 rounded chat-bubble received">
          ${mensaje.mediaUrl ? `<img src="${mensaje.mediaUrl}" alt="Imagen adjunta" class="img-thumbnail mb-2" style="max-width: 200px;">` : ''}
          <p class="mb-1"><strong>${mensaje.usuario.nombre}:</strong> ${mensaje.mensaje}</p>
          <small class="d-block text-left">${new Date(mensaje.createdAt).toLocaleString()}</small>
        </div>
      `;
    }

    // Añadir el mensaje al contenedor
    mensajesContainer.appendChild(messageDiv);

    // Hacer scroll hacia el último mensaje
    mensajesContainer.scrollTop = mensajesContainer.scrollHeight;
  });

  // Escuchar mensajes de error
  socket.on('errorMessage', function(message) {
    alert(message);
  });

  // Al cargar la página, hacer scroll al último mensaje
  window.onload = function() {
    const mensajesContainer = document.getElementById('chatContainer');
    if (mensajesContainer) {
      mensajesContainer.scrollTop = mensajesContainer.scrollHeight;
    }
  };
</script>